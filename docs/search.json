[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Crash Reporting US",
    "section": "",
    "text": "1 Introduction"
  },
  {
    "objectID": "index.html#context-for-readers",
    "href": "index.html#context-for-readers",
    "title": "Crash Reporting US",
    "section": "1.1 Context for Readers",
    "text": "1.1 Context for Readers\nCar crashes, also known as car accidents, refer to incidents involving the collision of vehicles with other vehicles, obstacles or humans. These accidents can lead to property damage, injuries, and even fatalities. Due to the detrimental effects of car crashes on society as a whole, the society has turned to roadway safety research, which is a field that aims to understand the causes and consequences of accidents and injuries on the road, and to develop strategies to prevent accidents and reduce their severity."
  },
  {
    "objectID": "index.html#motivation",
    "href": "index.html#motivation",
    "title": "Crash Reporting US",
    "section": "1.2 Motivation",
    "text": "1.2 Motivation\nIdentifying the potential factors impacting car accidents is important in the field of road safety. In the field of road traffic accidents, numerous factors could affect each other to cause serious consequences in an incident. Studying these factors will help us effectively mitigate the potential devastating effects caused by a car crash to help developing prevention strategies. Our study aims to unravel how these diverse factors related to the vehicle, driver, and external factors may influence the severity of a crash utilizing exploratory data analysis approach. By examining individual variables and relationships between variables, we intend not only to understand the individual impact of these factors but also to discover the interplay between them."
  },
  {
    "objectID": "index.html#research-questions",
    "href": "index.html#research-questions",
    "title": "Crash Reporting US",
    "section": "1.3 Research Questions",
    "text": "1.3 Research Questions\nIn this study, we aim to analyze a dataset encompassing various facets of car crashes in the U.S. to understand how the various factors interplay with each other. The questions we aim to investigate are as follow:\n\nAccident Hotspots: Which locations have the highest frequency of traffic collisions? This can help in identifying road types that may require road safety improvements.\nTime Patterns: Are there specific times of day, days of the week, or months of the year when accidents are more frequent? This information can be useful for planning traffic management depending on the time.\nCollision Causes: What are the most common causes of collisions reported in the dataset? Understanding the primary causes (e.g., speeding, distracted driving, mechanical failures) can inform preventive measures.\nImpact of Weather and Road Conditions: How do different weather conditions or road environments affect the frequency and severity of accidents? This can help in preventing adverse weather conditions and improving road maintenance.\nVehicle Types Involved: Are certain types of vehicles (e.g., passenger cars, trucks) more frequently involved in accidents? This can guide regulations and safety measures for different vehicle categories."
  },
  {
    "objectID": "data.html#technical-description",
    "href": "data.html#technical-description",
    "title": "2  Data",
    "section": "2.1 Technical Description",
    "text": "2.1 Technical Description\nFor the proposed project, we plan to utilize a dataset called Crash Reporting - Drivers Data from DATA.GOV, available at https://catalog.data.gov/dataset/crash-reporting-drivers-data. This dataset is published and maintained by data.montgomerycountymd.gov and is updated weekly for analysis.\nThe data was collected collaboratively by several local law enforcement agencies in Montgomery County via the Automated Crash Reporting System (ACRS) of the Maryland State Police, including the Montgomery County Police, Gaithersburg Police, Rockville Police, and the Maryland-National Capital Park Police.\nThe dataset comprises 169,760 rows and 43 columns. For our project, we have chosen the CSV format of the dataset. Other formats of the data such as RDF, JSON, XML, and a landing page format are also available on the source website. Notably, the data includes comprehensive details of vehicle and road conditions in the reported traffic collisions.\nHowever, a known issue regarding the dataset is that it also contains unverified collision data. Such unverified information can lead to biases or inaccuracies in analyzing and interpreting different variables. Another potential issue of the data after the initial examination was the mismatch between the ACRS Report Type and the Injury Severity columns. For example, an incident was classified as Injury Crash in the ACRS Report Type but in the Injury Severity it is marked as NO APPARENT INJURY. Such mismatches lead us to the decision of using Injury Severity as it provides more specific and accurate information about the car crash. Also, in Vehicle Year column, there are abnormal data value such as 0, 9999, 2024. These are likely to be incorrect values due to manual input or missing data, so we have decided to treat those abnormal data as missing value.\nTo import the dataset into an R environment for analysis, we will use the following R script:\n\n\nCode\ndata &lt;- read.csv(\"data/Crash_Reporting_-_Drivers_Data.csv\", header = TRUE, sep=\",\",na.strings=c(\"\",\"N/A\"))\nt(head(data,1))\n\n\n                               1                                     \nReport.Number                  \"MCP3040003N\"                         \nLocal.Case.Number              \"190026050\"                           \nAgency.Name                    \"Montgomery County Police\"            \nACRS.Report.Type               \"Property Damage Crash\"               \nCrash.Date.Time                \"05/31/2019 03:00:00 PM\"              \nRoute.Type                     NA                                    \nRoad.Name                      NA                                    \nCross.Street.Type              NA                                    \nCross.Street.Name              NA                                    \nOff.Road.Description           \"PARKING LOT OF 3215 SPARTAN RD\"      \nMunicipality                   NA                                    \nRelated.Non.Motorist           NA                                    \nCollision.Type                 \"OTHER\"                               \nWeather                        \"CLEAR\"                               \nSurface.Condition              NA                                    \nLight                          \"DAYLIGHT\"                            \nTraffic.Control                NA                                    \nDriver.Substance.Abuse         \"UNKNOWN\"                             \nNon.Motorist.Substance.Abuse   NA                                    \nPerson.ID                      \"DE2A24CD-7919-4F8D-BABF-5B75CE12D21E\"\nDriver.At.Fault                \"Yes\"                                 \nInjury.Severity                \"NO APPARENT INJURY\"                  \nCircumstance                   NA                                    \nDriver.Distracted.By           \"UNKNOWN\"                             \nDrivers.License.State          NA                                    \nVehicle.ID                     \"165AD539-A8C8-4004-AF73-B7DCAAA8B3CC\"\nVehicle.Damage.Extent          \"SUPERFICIAL\"                         \nVehicle.First.Impact.Location  \"ONE OCLOCK\"                          \nVehicle.Second.Impact.Location \"ONE OCLOCK\"                          \nVehicle.Body.Type              \"PASSENGER CAR\"                       \nVehicle.Movement               \"PARKING\"                             \nVehicle.Continuing.Dir         \"North\"                               \nVehicle.Going.Dir              \"North\"                               \nSpeed.Limit                    \"15\"                                  \nDriverless.Vehicle             \"No\"                                  \nParked.Vehicle                 \"No\"                                  \nVehicle.Year                   \"2004\"                                \nVehicle.Make                   \"HONDA\"                               \nVehicle.Model                  \"TK\"                                  \nEquipment.Problems             \"UNKNOWN\"                             \nLatitude                       \"39.15004\"                            \nLongitude                      \"-77.06309\"                           \nLocation                       \"(39.15004368, -77.06308884)\"         \n\n\nThis script reads the CSV file into a data frame. We use head(data)[1,] to display the first row of the dataset, providing a quick overview of the data structure."
  },
  {
    "objectID": "data.html#research-plan",
    "href": "data.html#research-plan",
    "title": "2  Data",
    "section": "2.2 Research plan",
    "text": "2.2 Research plan\nAs mentioned in the Introduction Chapter, we plan to investigate five questions in our study:\n\nAccident Hotspots: To identify the locations with the highest frequency of traffic collisions, we will utilize ‘Route Type’ and ‘Cross-Street Type’ variables to pinpoint specific areas or route types where accidents occur more frequently.\nTime Patterns: We will use’Crash Date/Time’ variable to understand the temporal patterns of accidents. This variable contains detailed information of the time, date, and year when the accident occurred.\nCollision Causes: We plan to use variables such as ‘Driver Substance Abuse’, ‘Driver Distracted By’, ‘Vehicle Movement’, and ‘Equipment Problems’ to understand the common causes of collisions and the severity of the collisions.\nImpact of Weather and Road Conditions: The influence of external conditions on traffic accidents can be assessed using variables like ‘Weather’, ‘Surface Condition’, ‘Light’, ‘Traffic Control’, and ‘Speed Limit’. We could associate these factors with the injury severity and vehicle damage extent.\nVehicle Types Involved: To determine if certain types of vehicles are more frequently involved in accidents, we will use the ‘Vehicle Body Type’, ‘Vehicle Year’, and ‘Vehicle Make’ variables. These variables could assist us in understanding the vehicle damage extent.\n\nA structured table of the research plan is shown as below:\n\n\n\n\n\n\n\n\n\nNO.\nResearch Question\nIndependent Variables\nDependent Variable\n\n\n\n\n1\nAccident Hotspots\nRoute Type, Cross-Street Type\nN/A\n\n\n2\nTime Patterns\nCrash Date/Time\nN/A\n\n\n3\nCollision Causes\nDriver Substance Abuse, Driver Distracted By, Vehicle Movement, Equipment Problems\nInjury Severity, Vehicle Damage Extent\n\n\n4\nImpact of Weather and Road Conditions\nWeather, Surface Condition, Light, Traffic Control, Speed Limit\nInjury Severity, Vehicle Damage Extent\n\n\n5\nVehicle Types Involved\nVehicle Body Type, Vehicle Year, Vehicle Make\nVehicle Damage Extent"
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.3 Missing value analysis",
    "text": "2.3 Missing value analysis\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(redav)\n\nmissing_value &lt;- colSums(is.na(data))/dim(data)[1]*100 |&gt; \n  sort(decreasing = TRUE)\n\nmissing_data_df &lt;- data.frame(\n  Column = names(missing_value),\n  NAs = missing_value\n)\n\n# plot percentage of missing value\nggplot(missing_data_df, aes(x = reorder(Column, NAs), y = NAs)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(x = \"Variables\", y = \"Percentage of Missing Values(%)\", title = \"Missing Value Percentage of All Variables\") +\n  coord_flip()\n\n\n\n\n\nThe graph indicates the following:\n\nApproximately 95% of the data in Non.Motorist.Substance.Abuse and Related.Non.Motorist categories is missing, suggesting a low incidence of accidents involving non-motorists.\nOff.Road.Description, Municipality, and Circumstance columns exhibit about 80% missing values, limiting their informational utility.\nApproximately half of the variables exhibit no missing values.\n\nWe will next refine our dataset to focus specifically on variables that are relevant to our research question. Specifically, this refinement involves the exclusion of three types of columns:\nA. Identifier columns such as Report.Number, Local.Case.Number, and Vehicle.ID, which, although useful for case identification, do not provide meaningful data for our analysis.\nB. Columns with a high rate of missing data, like Off.Road.Description and Municipality, offer limited informational value.\nC. Variables that are not directly related to our research questions, such as Vehicle.Going.Dir and Vehicle.First.Impact.Location.\nTo analyze and interpret missing values, we will employ bar charts to visualize the percentage of missing data and use the ‘plot missing’ function to identify any discernible patterns in the missing values.\n\n\nCode\n# refine dataset\ncolumns = c(\"Crash.Date.Time\", \"Route.Type\", \"Cross.Street.Type\",\n                  \"Weather\", \"Surface.Condition\", \"Light\", \n                  \"Traffic.Control\", \"Driver.Substance.Abuse\", \n                  \"Injury.Severity\", \"Driver.Distracted.By\", \n                  \"Vehicle.Damage.Extent\", \"Vehicle.Body.Type\", \n                  \"Vehicle.Movement\", \"Speed.Limit\", \"Vehicle.Year\", \n                  \"Vehicle.Make\", \"Equipment.Problems\")\ndata_refined = data[columns]\n\n# make abnormal data in 'Vehicle.Year' to NAs\ndata_refined &lt;- data_refined %&gt;%\n  mutate(Vehicle.Year = if_else(Vehicle.Year &lt; 1900 | Vehicle.Year &gt; 2023, NA_real_, Vehicle.Year))\n\n# analysis missing value\nmissing_value &lt;- colSums(is.na(data_refined))/dim(data_refined)[1]*100 |&gt; \n  sort(decreasing = TRUE)\n\nmissing_data_df &lt;- data.frame(\n  Column = names(missing_value),\n  NAs = missing_value\n)\n\n# plot percentage of missing value\nggplot(missing_data_df, aes(x = reorder(Column, NAs), y = NAs)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(x = \"Variables\", y = \"Percentage of Missing Values(%)\", title = \"Missing Value Persentage of Refined Variables\") +\n  coord_flip()\n\n\n\n\n\nFrom the bar chart, it is evident that all the variables of interest have less than 20% missing values. Notably, Equipment.Problems and Driver.Substance.Abuse exhibit relatively higher percentages of missing values, each exceeding 15%. The majority of the variables demonstrate relatively complete data values.\nTo enhance our visual analysis of the missing value patterns, we have selected a random subset of 500 rows and used numerical value to map the name of variables. This sample will help us more clearly discern any underlying trends in the missing value.\n\n\nCode\ncolumn_mapping &lt;- setNames(seq_along(columns), columns)\nnames(data_refined) &lt;- column_mapping[names(data_refined)]\nsampled_data &lt;- sample_n(data_refined, 500)\nprint(column_mapping)\n\n\n       Crash.Date.Time             Route.Type      Cross.Street.Type \n                     1                      2                      3 \n               Weather      Surface.Condition                  Light \n                     4                      5                      6 \n       Traffic.Control Driver.Substance.Abuse        Injury.Severity \n                     7                      8                      9 \n  Driver.Distracted.By  Vehicle.Damage.Extent      Vehicle.Body.Type \n                    10                     11                     12 \n      Vehicle.Movement            Speed.Limit           Vehicle.Year \n                    13                     14                     15 \n          Vehicle.Make     Equipment.Problems \n                    16                     17 \n\n\nCode\nplot_missing(sampled_data)\n\n\n\n\n\nFrom the graph, we can make following observation:\nAround 50% of the sample data has complete data value for all selected variable;\nAround 5% of the sample data only missed Equipment.Problems;\nAround 5% of the sample data only missed Driver.Substance.Abuse;\nAround 5% of the sample data only missed Traffic.Control;\nAround 2% of the sample data only missed Weather;\nAround 2% of the sample data missed both Equipment.Problems and Driver.Substance.Abuse;\nAround 2% of the sample data missed Route.Type, Cross.Street.Type and Surface.Condition;\nThere are no other clear patterns of missing data.\nThis pattern is reasonable since Equipment.Problems, Driver.Substance.Abuse and Traffic.Control are variables that has the most missing value. Route.Type, Cross.Street.Type and Surface.Condition are likely to missed together since those are all road condition information."
  },
  {
    "objectID": "results.html#accident-hotspots",
    "href": "results.html#accident-hotspots",
    "title": "3  Results",
    "section": "3.1 Accident Hotspots",
    "text": "3.1 Accident Hotspots\nThe bar graph presents data on the number of traffic collision categorized by route and cross street types from 2015 to 2023 in Montgomery County.\n\n\nCode\n# Change Variables as factors\ndata_q1$Route.Type =  as.factor(data_q1$Route.Type) |&gt; \n  fct_explicit_na(\"NA\")\ndata_q1$Cross.Street.Type = as.factor(data_q1$Cross.Street.Type) |&gt; \n  fct_explicit_na(\"NA\")\n\n# ggplot(data_q1, aes(y = fct_relevel(fct_rev(fct_infreq(Route.Type)), \n#                                     \"NA\"))) +\n#   geom_bar(fill = \"cornflowerblue\") +\n#   labs(x = \"Number of Crashes\", \n#        y = \"Route Type\", \n#        title = \"Number of Crashes by Route Types\") +\n#   theme_light()\n# \n# ggplot(data_q1, aes(y = fct_relevel(fct_rev(fct_infreq(Cross.Street.Type)), \n#                                     \"NA\"))) +\n#   geom_bar(fill = \"cornflowerblue\") +\n#   labs(x = \"Number of Crashes\",\n#        y = \"Cross Street Type\",\n#        title = \"Number of Crashes by Cross Street Types\") +\n#   theme_light()\n\ndata_q1$id = rownames(data_q1)\ndata_q1 = pivot_longer(data_q1,cols=Route.Type:Cross.Street.Type, \n                       names_to = \"location\")\nggplot(data_q1,aes(y = fct_relevel(fct_rev(fct_infreq(value)), \n                                    \"NA\"), fill = location)) +\n  geom_bar(position = \"dodge\") +\n  labs(x = \"Number of Crashes\",\n       y = \"Types\",\n       title = \"Number of Crashes by Route Types and Cross Street Types\",\n       subtitle = \"from 2015 to 2023\") +\n  theme_light(13) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nThe most notable finding is that County roads and Maryland State roads are the top two highest number of crashes for both route types and cross street types. For other categories such as Municipality, US (State), and Interstate (State), the number of crashes is relatively lower, with cross street types consistently recording fewer incidents than route types. Ramp, Other Public Roadway, Government, Service Road, and NA categories have the fewest crashes.\nHowever, the graph doesn’t provide the information that County roads and Maryland State roads are the most dangerous among all types. Since we collect the data in a county in Maryland state, the percentage of County and Maryland State roads are higher. More information is needed to determine the accident hotspot."
  },
  {
    "objectID": "results.html#time-patterns",
    "href": "results.html#time-patterns",
    "title": "3  Results",
    "section": "3.2 Time Patterns",
    "text": "3.2 Time Patterns\nUnderstanding the temporal patterns of road traffic accidents is crucial for developing effective safety measures and policies. By analyzing the frequency of crashes across different times of the day and week, researchers and policymakers can identify high-risk periods and underlying factors that contribute to these patterns.\nWe will analysis the yearly, monthly, weekly and hourly traffic collision pattern in Montgomery County, Maryland.\n\n3.2.1 Yearly & Seasonal Patterns\nThe line graph below presents a detailed temporal analysis of traffic collision from 2015 to 2023, revealing several critical patterns within the data.\n\n\nCode\ndata_q2$Crash.Date.Time = mdy_hms(data_q2$Crash.Date.Time)\ndata_q2$Year = as.factor(year(data_q2$Crash.Date.Time))\ndata_q2$Month = as.factor(months(data_q2$Crash.Date.Time)) |&gt; \n  fct_relevel(\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n              \"August\",\"September\",\"October\",\"November\",\"December\")\ndata_q2$Day = as.factor(day(data_q2$Crash.Date.Time))\ndata_q2$Weekday = as.factor(weekdays(data_q2$Crash.Date.Time)) |&gt; \n  fct_relevel(\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\n              \"Friday\",\"Saturday\")\ndata_q2$Hours = as.factor(hour(data_q2$Crash.Date.Time))\n\n# ggplot(data_q2,aes(x = Year)) +\n#   geom_point(stat = \"count\") +\n#   geom_line(aes(group = 1), stat = \"count\", color = \"cornflowerblue\") +\n#   ggtitle(\"Number of Crashes by Year\") +\n#   theme_light()\n# \n# ggplot(data_q2,aes(x = Month)) +\n#   geom_point(stat = \"count\") +\n#   geom_line(aes(group = 1), stat = \"count\", color = \"cornflowerblue\") +\n#   ggtitle(\"Number of Crashes by Month\") +\n#   theme_light()\n\n# ggplot(data_q2,aes(x = Day)) +\n#   geom_point(stat = \"count\") +\n#   geom_line(aes(group = 1), stat = \"count\", color = \"cornflowerblue\") +\n#   ggtitle(\"Number of Crashes by Day\") +\n#   theme_light()\n\n# ggplot(data_q2,aes(x = Weekday)) +\n#   geom_point(stat = \"count\") +\n#   geom_line(aes(group = 1), stat = \"count\", color = \"cornflowerblue\") +\n#   ggtitle(\"Number of Crashes by Weekday\") +\n#   theme_light()\n# \n# ggplot(data_q2,aes(x = Hours)) +\n#   geom_point(stat = \"count\") +\n#   geom_line(aes(group = 1), stat = \"count\", color = \"cornflowerblue\") +\n#   ggtitle(\"Number of Crashes by Hours\") +\n#   theme_light()\n\nggplot(data_q2,aes(Month)) +\n  geom_point(stat = \"count\") +\n  geom_density(aes(group = 1), stat = \"count\", color = \"cornflowerblue\") +\n  facet_wrap(~Year,ncol = 9) +\n  labs(y = \"Number of Crashes\", \n       title = \"Number of Crashes Per Month Faceted by Year\",\n       subtitle =  \"from 2015 to 2023\") +\n\n  theme_light(13) +\n  theme(axis.text.x = element_text(size = 6, angle = 45),\n         plot.title = element_text(hjust = 0.5)) +\n  scale_x_discrete(labels = function(x) str_sub(x, 1, 3))\n\n\n\n\n\nSignificantly, there is a conspicuous decline in the number of crashes during the year 2020. This aberration corresponds with the global onset of the COVID-19 pandemic, a period characterized by lockdowns and widespread restrictions on movement. The resulting reduction in road traffic during this time is likely the primary driver behind the observed decrease in crashes, as stay-at-home orders and the transition to remote work reduced the frequency of commuting and non-essential travel.\nMoreover, the graph illustrates recurrent peaks in the number of crashes during the months of May and October across multiple years. The reasons behind these spikes may be multifaceted. In May, increased travel due to warmer weather and social events, such as Memorial Day weekend in the United States, could contribute to higher traffic volumes and consequently, a greater incidence of crashes. October’s peak might be influenced by a combination of factors, including the end of summer vacations, the resumption of the school year, and potentially more challenging driving conditions due to seasonal weather changes, such as reduced daylight and falling leaves, which can affect road visibility and traction. These observations suggest that there are underlying seasonal behaviors and external events that significantly influence the rate of traffic incidents.\n\n\n3.2.2 Weekly & Time Patterns\n\n\nCode\nggplot(data_q2, aes(Hours)) +\n  geom_point(stat = \"count\") + \n  geom_density(aes(group = 1), stat = \"count\", color = \"cornflowerblue\") +\n  facet_wrap(~Weekday, ncol = 7) +\n  labs(y = \"Number of Crashes\", \n       title = \"Total Number of Crashes of Time of A Day Faceted by Weekday\",\n       subtitle = \"from 2015 to 2023\") +\n  theme_light(13) +\n  theme(axis.text.x = element_text(size = 6, angle = 45),\n         plot.title = element_text(hjust = 0.5)) +\n  scale_x_discrete(labels = function(x) str_sub(x, 1, 3))\n\n\n\n\n\nThe line graph delineates the total number of crashes per hour, segmented by weekday, from 2015 to 2023. A prominent observation is that weekdays experience a higher frequency of crashes compared to weekends. This pattern likely reflects the routine dynamics of workweek traffic with increased vehicle volume due to commuting.\nIntriguingly, there are two distinct peaks that occur around 8 AM and 5 PM on weekdays, aligning with typical rush hour times when commuters are either heading to work or returning home. On weekends, the peaks is around 12 pm to 3 pm, which matches our routine. Since people tend to choose going out in the afternoon during the weekend, more traffic during that time. The data underscores the critical need for enhanced safety measures during peak commuting hours on weekdays to mitigate the risk of crashes."
  },
  {
    "objectID": "results.html#collision-causes",
    "href": "results.html#collision-causes",
    "title": "3  Results",
    "section": "3.3 Collision Causes",
    "text": "3.3 Collision Causes\n\n3.3.1 Driver Substance Abuse\nTable 1: Percentage of Traffic Collision Involved Driver Substance Abuse\n\n\n\nNone Detected\nDetected\nUnknown\n\n\n\n\n\n71.19%\n3.64%\n25.17%\n\n\n\n\nDriver substance abuse stands as one potential causes of traffic collision. The table above indicates that in majority crash cases, no substances were detected in drivers involved in accidents. There is only a notable minority of cases that substance abuse was confirmed. We will analysis more on the detected substance abuse cases in following stacked bar graph:\n\n\nCode\n# Data Preprocessing\ndata_q3$Driver.Substance.Abuse = as.factor(data_q3$Driver.Substance.Abuse) |&gt; \n  fct_explicit_na(\"NA\")\ndata_q3$Driver.Distracted.By = as.factor(data_q3$Driver.Distracted.By) |&gt; \n  fct_explicit_na(\"NA\")\ndata_q3$Vehicle.Movement = as.factor(data_q3$Vehicle.Movement) |&gt; \n  fct_explicit_na(\"NA\")\ndata_q3$Equipment.Problems = as.factor(data_q3$Equipment.Problems) |&gt; \n  fct_explicit_na(\"NA\")\ndata_q3$Injury.Severity = as.factor(data_q3$Injury.Severity) |&gt; \n  fct_explicit_na(\"NA\")\ndata_q3$Vehicle.Damage.Extent = as.factor(data_q3$Vehicle.Damage.Extent) |&gt; \n  fct_explicit_na(\"NA\")\ndata_q3$crashes = 1\n\n# Driver Substance Abuse\ndata = group_by(data_q3,Driver.Substance.Abuse) |&gt; \n  summarise(count = sum(crashes)) |&gt; \n  mutate(Driver.Substance.Abuse = reorder(Driver.Substance.Abuse, count))\ndata$percentage = data$count/sum(data$count)*100\n# ggplot(data, aes(percentage, Driver.Substance.Abuse)) +\n#   geom_bar(stat = \"identity\", fill = \"lightblue\")\ndata = data |&gt; \n  filter(Driver.Substance.Abuse != \"NA\") |&gt; \n  filter(Driver.Substance.Abuse != \"NONE DETECTED\") |&gt; \n  filter(Driver.Substance.Abuse != \"UNKNOWN\") |&gt; \n  filter(Driver.Substance.Abuse != \"OTHER\")\ndata$Driver.Substance.Abuse = as.character(data$Driver.Substance.Abuse)\ndata$Driver.Substance.Abuse[4] = \"COMBINATION PRESENT\"\ndata$reversed &lt;- stringi::stri_reverse(data$Driver.Substance.Abuse)\nsplit_strings &lt;- strsplit(data$reversed, \" \", fixed = TRUE)\ndata$substance &lt;- sapply(split_strings, function(x) stringi::stri_reverse(x[2]))\ndata$category &lt;- sapply(split_strings, function(x) stringi::stri_reverse(x[1]))\ndata$reversed &lt;- NULL\ndata$substance = as.factor(data$substance) |&gt; \n  fct_relevel(\"ALCOHOL\", \"DRUG\", \"MEDICATION\", \"COMBINATION\")\nggplot(data, aes(substance, count, fill = category)) +\n  geom_col() +\n  labs(x = \"Substance\", \n       y = \"Number of Crashes\",\n       title = \"Number of Crashes Involved in Driver Substance Abuse\") +\n  theme_light() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nThe four main categories of substance that detected from driver in traffic collision but not allowed are alcohol, illegal drugs, medications that impair driving ability and a combination of these substances.\nIn each categories, “Contributed” refers to instances where the substance present was deemed to have actively contributed to the cause of the crash, suggesting a direct link between impairment and the accident; “Present”, on the other hand, indicates cases where the substance was detected, but without a definitive contribution to the crash established.\nUpon examining the graph, it becomes evident that alcohol is the most commonly detected substance in traffic crashes, dominating the data in terms of both presence and contribution to accidents. Across all substance categories, including alcohol, drugs, medication, and combinations, the ‘Contributed’ figures—representing cases where the substance directly caused the crash—constitute roughly one-third of the instances where the substance was present. This ratio is consistent across all categories, indicating a significant direct impact of these substances on traffic safety. This underscores the critical need for robust preventive measures and strict enforcement of laws against driving under the influence of any impairing substances.\n\n\n3.3.2 Driver Distraction\nDriver distraction is recognized as another common cause of traffic collisions, often with dire consequences. Distraction comes in various forms and can be categorized as internal or external, based on the origin of the distraction. Internal distractions are those within the vehicle and include actions such as talking or listening to a cellular phone, texting, eating, or adjusting the vehicle’s controls. External distractions, by contrast, are outside the vehicle and can involve being distracted by external events, objects, or the actions of other people.\nTable 2: Percentage of Traffic Collision Involved Driver Distraction\n\n\n\n\n\n\n\n\n\n\nNot Distracted or Unknown\nInattention\nInternal Distraction\nExternal Distraction\nOther\n\n\n\n\n81.10%\n15.00%\n1.30%\n0.55%\n2.05%\n\n\n\nAccording to the provided data in Table 2, 15% of traffic collision are involved in driver’s inattention, which include driver “looking but did not see” or “inattentive or lost in thought”. Internal distractions and external distraction only make up around 1.8% of collisions.\n\n\nCode\ndata2 = group_by(data_q3,Driver.Distracted.By) |&gt; \n  summarise(count = sum(crashes)) |&gt; \n  mutate(Driver.Distracted.By = reorder(Driver.Distracted.By, count))\ndata2$percentage = data2$count/sum(data2$count)*100\n# ggplot(data2, aes(percentage, Driver.Distracted.By)) +\n#   geom_bar(stat = \"identity\", fill = \"lightblue\")\ndata2 &lt;- data2 %&gt;%\n  mutate(category = case_when(\n    Driver.Distracted.By %in% c(\"NOT DISTRACTED\", \"UNKNOWN\") ~ \n      \"Not Distracted or Unknown\",\n    Driver.Distracted.By %in% c(\"LOOKED BUT DID NOT SEE\", \n                                \"INATTENTIVE OR LOST IN THOUGHT\") ~\n      \"Inattention\",\n    Driver.Distracted.By %in% c(\"BY OTHER OCCUPANTS\", \"OTHER CELLULAR PHONE RELATED\",\n                                \"TALKING OR LISTENING TO CELLULAR PHONE\", \n                                \"TEXTING FROM A CELLULAR PHONE\",\n                                \"DIALING CELLULAR PHONE\", \"EATING OR DRINKING\",\n                                \"ADJUSTING AUDIO AND OR CLIMATE CONTROLS\", \n                                \"USING OTHER DEVICE CONTROLS INTEGRAL TO VEHICLE\",\n                                \"USING DEVICE OBJECT BROUGHT INTO VEHICLE\", \n                                \"BY MOVING OBJECT IN VEHICLE\", \"SMOKING RELATED\",\n                                \"OTHER ELECTRONIC DEVICE (NAVIGATIONAL PALM PILOT)\") ~ \n      \"Internal Distraction\",\n    Driver.Distracted.By %in% c(\"DISTRACTED BY OUTSIDE PERSON OBJECT OR EVENT\") ~ \n      \"External Distraction\",\n    TRUE ~ \"Other\"\n  ))\n# data3 = group_by(data2,category) |&gt;\n#   summarise(count = sum(count))\n# data3$percentage = data3$count / sum(data3$count) * 100\ndata2 |&gt; \n  filter(category == \"Internal Distraction\") |&gt; \n  ggplot(aes(percentage, Driver.Distracted.By)) +\n    geom_bar(stat = \"identity\", fill = \"lightblue\") + \n    theme_light() +\n    theme(axis.text.y = element_text(size = 8),\n          plot.title = element_text(hjust = 0.5)) +\n    labs(x = \"Percentage of Total Crashes(%)\", \n         y = \"Category\", \n         title = \"Percentage of Crashes Caused by Internal Distraction\")\n\n\n\n\n\nThe accompanying graph further breaks down internal distractions, highlighting the most frequent activity that lead to crashes is other occupants in vehicle.\nTo mitigate the risks of internal distractions, drivers are advised to minimize activities with other occupants in vehicle and the use of mobile phones while driving. Hands-free and voice-operated technologies can be beneficial, but their use should not overly divert attention from the road. The data calls for increased awareness and stronger adherence to road safety regulations, emphasizing the need to stay focused and avoid multi-tasking while behind the wheel.\n\n\n3.3.3 Equipment Problems\n\n\nCode\ndata3 = group_by(data_q3,Equipment.Problems) |&gt; \n  summarise(count = sum(crashes)) |&gt; \n  mutate(Equipment.Problems = reorder(Equipment.Problems, count))\ndata3$percentage = data3$count/sum(data2$count)*100\n# ggplot(data3, aes(percentage, Equipment.Problems)) +\n#   geom_bar(stat = \"identity\", fill = \"lightblue\")\n\n\n\n\n\nNo Misuse\nMisuse\nUnknown\n\n\n\n\n71.67%\n0.21%\n28.12%\n\n\n\n\n\n3.3.4 Vehicle Movement\n\n\nCode\ndata4 = data_q3 |&gt; \n  select(Vehicle.Movement, Injury.Severity, Vehicle.Damage.Extent)\ndata4$crashes = 1\ndata4$Movement_Category = data4$Vehicle.Movement\ndata4 = data4 %&gt;%\n  mutate(Movement_Category = case_when(\n    Vehicle.Movement %in% c(\"ACCELERATING\", \"MOVING CONSTANT SPEED\",\n                            \"NEGOTIATING A CURVE\") ~ \"In Motion\",\n    Vehicle.Movement %in% c(\"MAKING LEFT TURN\", \"MAKING RIGHT TURN\", \n                            \"MAKING U TURN\", \"CHANGING LANES\") ~\n      \"Turning\",\n    Vehicle.Movement %in% c(\"STARTING FROM LANE\", \"STARTING FROM PARKED\") ~\n      \"Starting\",\n    Vehicle.Movement %in% c(\"BACKING\", \"ENTERING TRAFFIC LANE\", \n                            \"LEAVING TRAFFIC LANE\") ~ \n      \"Traffic Related\",\n    Vehicle.Movement %in% c(\"PARKED\", \"PARKING\", \"STOPPED IN TRAFFIC LANE\") ~\n      \"Stationary\",\n    Vehicle.Movement %in% c(\"PASSING\", \"SKIDDING\", \"SLOWING OR STOPPING\") ~\n      \"Maneuvering\",\n    Vehicle.Movement %in% c(\"DRIVERLESS MOVING VEH.\") ~ \"Driverless\",\n    Vehicle.Movement == \"UNKNOWN\" | Vehicle.Movement == \"NA\" ~ \"Unknown\",\n    TRUE ~ \"Other\"\n  ))\ndata4$Movement_Category = as.factor(data4$Movement_Category) |&gt; \n  fct_infreq()\n# datam = group_by(data4,Movement_Category) |&gt; \n#   summarise(count = sum(crashes)) |&gt; \n#   mutate(Movement_Category = reorder(Movement_Category, count))\n# datam$percentage = datam$count/sum(datam$count)*100\n# ggplot(datam, aes(percentage, Movement_Category)) +\n#   geom_bar(stat = \"identity\", fill = \"lightblue\")\ndata4_filtered &lt;- data4 %&gt;%\n  filter(!Movement_Category %in% c(\"Unknown\", \"Other\",\"Driverless\")) |&gt; \n  filter(Vehicle.Damage.Extent %in% c(\"DESTROYED\", \"DISABLING\", \"FUNCTIONAL\",\n                                      \"NO DAMAGE\", \"SUPERFICIAL\"))\nmosaicplot(droplevels(Movement_Category) ~\n             droplevels(fct_rev(Vehicle.Damage.Extent)),\n           dir =c('v', 'h'),\n           color = brewer.pal(n = 5, name = \"Blues\"),\n           main = \"Vehicle Momement vs. Vehicle Damage Extent\",\n           xlab = \"Vehicle Movement\", \n           ylab = \"Damage Level\",\n           data4_filtered) \n\n\n\n\n\nCode\n# mosaicplot(droplevels(Movement_Category) ~\n#              droplevels(fct_relevel(Injury.Severity, \"FATAL INJURY\", after = Inf)),\n#            dir =c('v', 'h'),\n#            color = brewer.pal(n = 5, name = \"Blues\"),\n#            main = \"Vehicle Momement vs. Injury Severity\",\n#            xlab = \"Vehicle Movement\", \n#            ylab = \"Injury Severity Level\",\n#            data4_filtered)"
  },
  {
    "objectID": "results.html#q4",
    "href": "results.html#q4",
    "title": "3  Results",
    "section": "3.4 Q4",
    "text": "3.4 Q4\n\n\nCode\nlibrary(vcd)\nlibrary(dplyr)\nlibrary(RColorBrewer)\n\n# Since OTHER and UNKNOWN do not provide information of interest for our questions, we drop these two levels from\n# our analysis for Vehile damage extent\ndata_q4_regrouped &lt;- data_q4 %&gt;%\n  mutate(\n    Weather = case_when(\n      Weather %in% c(\"CLEAR\", \"CLOUDY\") ~ \"CLEAR\",\n      TRUE ~ \"ADVERSE\"\n    ),\n    Surface.Condition = case_when(\n      Surface.Condition %in% c(\"DRY\") ~ \"DRY\",\n      Surface.Condition %in% c(\"WET\", \"WATER(STANDING/MOVING)\") ~ \"WET\",\n      Surface.Condition %in% c(\"ICE\", \"SLUSH\", \"SNOW\") ~ \"SNOW/ICE\",\n      Surface.Condition %in% c(\"MUD, DIRT, GRAVEL\", \"SAND\", \"OIL\", \"OTHER\", \"UNKNOWN\") ~ \"OTHERS\",\n      TRUE ~ Surface.Condition \n    )\n  ) \ndata_q4_regrouped$Vehicle.Damage.Extent &lt;- factor(data_q4_regrouped$Vehicle.Damage.Extent, \n                                                   levels = c(\"UNKNOWN\",\"OTHER\", \"NO DAMAGE\", \"SUPERFICIAL\", \"FUNCTIONAL\", \"DISABLING\", \"DESTROYED\"))\ndata_q4_filtered &lt;- data_q4_regrouped %&gt;%\n  filter(!Vehicle.Damage.Extent %in% c(\"UNKNOWN\", \"OTHER\"))\ndata_q4_filtered$Vehicle.Damage.Extent &lt;- droplevels(data_q4_filtered$Vehicle.Damage.Extent)\n# mosaic(Vehicle.Damage.Extent ~ Surface.Condition,\n#       rot_labels=c(45, 0),\n#       direction =c('v','h'),\n#       data_q4_filtered\n#       )\n# mosaic(Vehicle.Damage.Extent ~ Weather,\n#       rot_labels=c(0, 0),\n#       direction =c('v','h'),\n#       data_q4_filtered\n#       )\nmosaic(Vehicle.Damage.Extent ~  Weather + Surface.Condition,\n      rot_labels=c(0, 45, 45, 45),\n      direction =c('v', 'v', 'h'),\n      data_q4_filtered\n      ) \n\n\n\n\n\n\n\nCode\n# top coding, group 55 and 55+ together due to small number for 60, 65, 70, 75\ndata_q4_speed &lt;- data_q4 %&gt;%\n  mutate(\n    Speed.Limit = case_when(\n      Speed.Limit &gt;= 55 ~ \"55+\",\n      TRUE ~  as.character(Speed.Limit)\n    ),\n  ) \ndata_q4_speed$Vehicle.Damage.Extent &lt;- factor(data_q4_speed$Vehicle.Damage.Extent, \n                                                   levels = c(\"UNKNOWN\",\"OTHER\", \"NO DAMAGE\", \"SUPERFICIAL\", \"FUNCTIONAL\", \"DISABLING\", \"DESTROYED\"))\ndata_q4_speed$Speed.Limit &lt;- factor(data_q4_speed$Speed.Limit,\n                                    levels = c(\"0\", \"5\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\",\n                                               \"40\", \"45\", \"50\", \"55+\"))\ndata_q4_speed$Injury.Severity &lt;- factor(data_q4_speed$Injury.Severity, \n                                                   levels = c(\"NO APPARENT INJURY\", \"POSSIBLE INJURY\",\n                                                              \"SUSPECTED MINOR INJURY\", \n                                                              \"SUSPECTED SERIOUS INJURY\", \"FATAL INJURY\"))\ndata_q4_filtered &lt;- data_q4_speed %&gt;%\n  filter(!Vehicle.Damage.Extent %in% c(\"UNKNOWN\", \"OTHER\"))\ndata_q4_filtered$Vehicle.Damage.Extent &lt;- droplevels(data_q4_filtered$Vehicle.Damage.Extent)\n# speed-limit with vehicle damage extent\nmosaic(Vehicle.Damage.Extent ~ Speed.Limit,\n      rot_labels=c(45, 0),\n      direction =c('v','h'),\n      data_q4_filtered\n      )\n\n\n\n\n\nCode\n# speed-limit with injury-severity\n# mosaic(Injury.Severity ~ Speed.Limit,\n#        rot_labels=c(45, 45),\n#        direction=c('v', 'h'),\n#        data_q4_filtered) \n\n\n\n\nCode\ntheme_heat &lt;- theme_classic() +\n  theme(axis.line = element_blank(),\n        axis.ticks = element_blank(),\n        axis.text.x = element_text(angle = 15, vjust = 0.5, size = 5.5),\n        strip.text = element_text(size = 8),\n        plot.title = element_text(hjust = 0.5)\n        )\nlighting_order &lt;- c(\"DAWN\", \"DAYLIGHT\", \"DUSK\", \"DARK LIGHTS ON\", \"DARK -- UNKNOWN LIGHTING\", \n                  \"DARK NO LIGHTS\", \"OTHER\", \"UNKNOWN\")\ninjury_order &lt;- rev(c(\"NO APPARENT INJURY\", \"POSSIBLE INJURY\", \"SUSPECTED MINOR INJURY\", \"SUSPECTED SERIOUS INJURY\", \"FATAL INJURY\"))\nmydata &lt;- data_q4 %&gt;%\n  filter(!is.na(Speed.Limit) & !is.na(Traffic.Control) & !is.na(Injury.Severity)) %&gt;%\n  select(Light, Traffic.Control, Injury.Severity) %&gt;%\n  group_by(Light, Traffic.Control, Injury.Severity) %&gt;%\n  summarize(Frequency = n())\n# View the new dataframe\nmydata$Light &lt;- factor(mydata$Light, levels=lighting_order)\nmydata$Injury.Severity &lt;- factor(mydata$Injury.Severity, levels=injury_order)\nmydata3 &lt;- mydata |&gt; group_by(Injury.Severity, Light) |&gt; \n  mutate(Total = sum(Frequency)) |&gt; ungroup()\n\nggplot(mydata3, aes(x = Light, y = Traffic.Control)) +\n  geom_tile(aes(fill = (Frequency/Total)), color = \"white\") +\n  coord_fixed() + \n  scale_fill_gradient2(low = \"black\", mid = \"white\",\n                        high = \"red\", midpoint = 0.1) +\n  facet_wrap(~Injury.Severity) + theme_heat +\n  labs(title=\"Heatmap for Light and Traffic Control Conditions Under Different Injury Levels\")\n\n\n\n\n\n\n\nCode\nvehicle_damage_table_1 &lt;- xtabs(~ Vehicle.Damage.Extent + Surface.Condition, data = data_q4_filtered)\nvehicle_damage_table_2 &lt;- xtabs(~ Vehicle.Damage.Extent + Weather, data = data_q4_filtered)\nvehicle_damage_table_3 &lt;- xtabs(~ Vehicle.Damage.Extent + Traffic.Control, data = data_q4_filtered)\nvehicle_damage_table_4 &lt;- xtabs(~ Vehicle.Damage.Extent + Light, data = data_q4_filtered)\nvehicle_damage_table_5 &lt;- xtabs(~ Vehicle.Damage.Extent + Speed.Limit, data = data_q4_filtered )\ninjury_severity_table_1 &lt;- xtabs(~ Injury.Severity + Surface.Condition, data = data_q4_filtered)\ninjury_severity_table_2 &lt;- xtabs(~ Injury.Severity + Weather, data = data_q4_filtered)\ninjury_severity_table_3 &lt;- xtabs(~ Injury.Severity + Traffic.Control, data = data_q4_filtered)\ninjury_severity_table_4 &lt;- xtabs(~ Injury.Severity + Light, data = data_q4_filtered)\ninjury_severity_table_5 &lt;- xtabs(~ Injury.Severity + Speed.Limit, data = data_q4_filtered )\n# chi-q test Vehicle.Damage.Extent vs. Surface.Condition\n# summary(vehicle_damage_table_1)\n# # chi-q test Vehicle.Damage.Extent vs. Weather\n# summary(vehicle_damage_table_2)\n# summary(vehicle_damage_table_3)\n# summary(vehicle_damage_table_4)\n# summary(vehicle_damage_table_5)\n# summary(injury_severity_table_1)\n# summary(injury_severity_table_2)\n# summary(injury_severity_table_3)\n# summary(injury_severity_table_4)\n# summary(injury_severity_table_5)"
  },
  {
    "objectID": "results.html#q5",
    "href": "results.html#q5",
    "title": "3  Results",
    "section": "3.5 Q5",
    "text": "3.5 Q5\n\n\nCode\nsummary(data_q5)\n\n\n Vehicle.Body.Type   Vehicle.Year  Vehicle.Make       Vehicle.Damage.Extent\n Length:169760      Min.   :   0   Length:169760      Length:169760        \n Class :character   1st Qu.:2006   Class :character   Class :character     \n Mode  :character   Median :2011   Mode  :character   Mode  :character     \n                    Mean   :1966                                           \n                    3rd Qu.:2015                                           \n                    Max.   :9999                                           \n\n\n\n\nCode\ndata_q5$Vehicle.Body.Type = as.factor(data_q5$Vehicle.Body.Type) |&gt; \n  fct_explicit_na(\"NA\")\n\ndata_q5$Vehicle.Year[data_q5$Vehicle.Year &gt; 2013] = NA\ndata_q5$Vehicle.Year[data_q5$Vehicle.Year &lt; 1886] = NA\n# data_q5$Vehicle.Year = as.factor(data_q5$Vehicle.Year) |&gt; \n#   fct_explicit_na(\"NA\")\ndata_q5$Vehicle.Year = 2013 - data_q5$Vehicle.Year\n\nlight = c(\"(SPORT) UTILITY VEHICLE\", \"PASSENGER CAR\", \"STATION WAGON\", \n         \"PICKUP TRUCK\", \"VAN\", \"LIMOUSINE\", \"AUTOCYCLE\", \n         \"MOPED\", \"MOTORCYCLE\", \"LOW SPEED VEHICLE\", \n         \"SNOWMOBILE\", \"OTHER LIGHT TRUCKS (10,000LBS (4,536KG) OR LESS)\")\nmedium = c(\"AMBULANCE/NON EMERGENCY\", \"CROSS COUNTRY BUS\", \n           \"FARM VEHICLE\", \"POLICE VEHICLE/NON EMERGENCY\", \"OTHER BUS\",\n           \"RECREATIONAL VEHICLE\", \"SCHOOL BUS\", \"TRANSIT BUS\")\nheavy = c(\"CARGO VAN/LIGHT TRUCK 2 AXLES (OVER 10,000LBS (4,536 KG))\",\n          \"MEDIUM/HEAVY TRUCKS 3 AXLES (OVER 10,000LBS (4,536KG))\", \n          \"TRUCK TRACTOR\")\ndata_q5$Vehicle.Size = with(data_q5, \n                            ifelse(Vehicle.Body.Type %in% light, \"Light\",\n                            ifelse(Vehicle.Body.Type %in% medium, \"Medium\",\n                            ifelse(Vehicle.Body.Type %in% heavy, \"Heavy\",\n                            \"Unknown & Others\")))) |&gt; \n  as.factor() |&gt; \n  fct_relevel(\"Light\",\"Medium\",\"Heavy\",\"Unknown & Others\")\n\ndata_q5$Vehicle.Damage.Extent = as.factor(data_q5$Vehicle.Damage.Extent) |&gt; \n  fct_explicit_na(\"NA\") |&gt; \n  fct_relevel(\"NO DAMAGE\", \"SUPERFICIAL\", \"FUNCTIONAL\", \"DISABLING\",\n              \"DESTROYED\",\"UNKNOWN\", \"OTHER\", \"NA\")\n\n\n\n\nCode\n# Vehicle.Year vs Vehicle.Damage.Extent\nggplot(data_q5, aes(Vehicle.Year, fct_rev(Vehicle.Damage.Extent))) +\n  geom_boxplot(varwidth = TRUE) +\n  geom_vline(xintercept = mean(data_q5$Vehicle.Year, na.rm = T),color = \"red\") +\n  labs(x = \"Vehicle Age\", \n       y = \"Vehicle Damage Extent\", \n       title = \"Boxplot of Vehicle Age by Vehicle Damage Extent\") +\n  xlim(0,30) +\n  theme_bw()\n\n\n\n\n\nCode\n# Vehicle.Size vs Vehicle.Damage.Extent\ndata_q5$crash = 1\ndata = data_q5 |&gt; \n  group_by(Vehicle.Size, Vehicle.Damage.Extent) |&gt; \n  summarise(total_crashes = sum(crash))\n\nggplot(data, aes(Vehicle.Damage.Extent, total_crashes)) +\n  geom_point(size = 2) +\n  facet_wrap(~Vehicle.Size,\n             nrow = 4,\n             scales = \"free_y\") +\n  labs(x = \"Vehicle Damage Extent\",\n       y = \"Number of Crashed\",\n       title = \"Cleveland Dot Plot of Number of Crashes of Vehicle Damage Extent \nfor Different Vehicle Size\") +\n  theme_bw()"
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "This interactive section is mainly for readers to explore our results to Q4.\n\n\n\nStart by choosing your independent variable from the dropdown menu. You can select from options such as “Weather,” “Speed Limit,” “Surface Condition,” “Light,” and “Traffic Control.” Next, select your dependent variable. Options include “Injury Severity” and “Vehicle Damage Extent.”\n\n\n\n\n\nAfter selecting your variables, the webpage generates two bar graphs. The top graph illustrates the distribution of the chosen dependent variable by the first level of your independent variable. Simultaneously, the bottom graph shows the distribution by the second level of your independent variable.\n\n\n\n\nEach bar on the graphs represents a specific category within the chosen independent variable. Hover over a bar to view detailed information about that category. Choose variables and levels of your interest to explore our results!\n\n\n\nIndependent Variable:  Weather Surface Condition Light Traffic Control Speed Limit \n\n\nDependent Variable:  Injury Severity Vehicle Damage Extent \n\n\nChosen Independent Variable Level 1:  NONE \n\n\nChosen Inependent Variable Level 2:  NONE"
  }
]